name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.9

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run tests
      run: pytest

  build-and-push-docker:
    runs-on: ubuntu-latest
    needs: build-and-test
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Install kubectl
      uses: azure/setup-kubectl@v3
      with:
        version: 'v1.24.0'

    - name: Log in to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Determine next version
      id: determine-version
      run: |
        current_version=$(kubectl get svc hello-gitops -n hello-gitops-new -o jsonpath='{.spec.selector.version}' 2>/dev/null || echo "none")
        if [[ "$current_version" == "blue" ]]; then
          echo "next_version=green" >> $GITHUB_ENV
        elif [[ "$current_version" == "green" ]]; then
          echo "next_version=blue" >> $GITHUB_ENV
        else
          echo "No active version detected. Defaulting to blue."
          echo "next_version=blue" >> $GITHUB_ENV
        fi

    - name: Log next version
      run: echo "Next deployment version is ${{ env.next_version }}"

    - name: Build and push Docker image
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/hello-gitops:${{ env.next_version }} .
        docker push ${{ secrets.DOCKER_USERNAME }}/hello-gitops:${{ env.next_version }}

    - name: Install kustomize
      run: |
        curl -sLo kustomize.tar.gz https://github.com/kubernetes-sigs/kustomize/releases/download/kustomize/v4.5.7/kustomize_v4.5.7_linux_amd64.tar.gz
        tar -xzf kustomize.tar.gz
        mv kustomize /usr/local/bin

    - name: Update kustomization.yaml with next version
      run: |
        sed -i.bak "s/\${NEXT_VERSION}/${{ env.next_version }}/g" kustomization.yaml

  deploy-to-eks:
    runs-on: ubuntu-latest
    needs: build-and-push-docker
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v3
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Update kubeconfig
      run: aws eks update-kubeconfig --region us-east-1 --name hello-gitops-new

    - name: Deploy updated version
      run: |
        if [[ "${{ env.next_version }}" == "green" ]]; then
          kubectl apply -f deployment-green.yaml -n hello-gitops-new
        else
          kubectl apply -f deployment-blue.yaml -n hello-gitops-new
        fi
