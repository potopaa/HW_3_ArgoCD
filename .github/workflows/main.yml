name: CI/CD Pipeline with GitOps (ArgoCD)

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests
        run: pytest

  build-and-push-docker:
    runs-on: ubuntu-latest
    needs: build-and-test
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Determine next version
        id: determine-version
        run: |
          current_version=$(kubectl get svc hello-gitops -n hello-gitops-argocd -o jsonpath='{.spec.selector.version}' 2>/dev/null || echo "none")
          if [[ "$current_version" == "blue" ]]; then
            echo "next_version=green" >> $GITHUB_ENV
          elif [[ "$current_version" == "green" ]]; then
            echo "next_version=blue" >> $GITHUB_ENV
          else
            echo "No active version detected. Defaulting to blue."
            echo "next_version=blue" >> $GITHUB_ENV
          fi
          echo "Next version: ${{ env.next_version }}"

      - name: Build and push Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/hello-gitops:${{ env.next_version }} .
          docker push ${{ secrets.DOCKER_USERNAME }}/hello-gitops:${{ env.next_version }}

      - name: Update deployment manifests
        run: |
          sed -i "s|image:.*|image: ${{ secrets.DOCKER_USERNAME }}/hello-gitops:${{ env.next_version }}|" deployment-${{ env.next_version }}.yaml

      - name: Commit and push deployment changes
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add deployment-${{ env.next_version }}.yaml
          git commit -m "Update deployment to use image ${{ secrets.DOCKER_USERNAME }}/hello-gitops:${{ env.next_version }}"
          git push

  deploy-to-argocd:
    runs-on: ubuntu-latest
    needs: build-and-push-docker
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Configure ArgoCD CLI
        uses: jaxxstorm/action-install-argocd@v1
        with:
          version: v2.9.3

      - name: Log in to ArgoCD
        run: |
          argocd login ${{ secrets.ARGOCD_SERVER }} \
            --username ${{ secrets.ARGOCD_USERNAME }} \
            --password ${{ secrets.ARGOCD_PASSWORD }} \
            --insecure

      - name: Sync ArgoCD application
        run: |
          argocd app sync hello-gitops-argocd

      - name: Wait for application to be healthy
        run: |
          argocd app wait hello-gitops-argocd --health --timeout 300
